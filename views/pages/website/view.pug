extends ../../layout

block content
    .row
        .col-sm-3
            .card.card-primary.card-outline
                .card-body.box-profile
                    .text-center
                        a(href=website_url, title="Visit "+website_url+" in the browser", target="_blank")
                            if status == "INACTIVE"
                                span(class="fas fa-globe", style="font-size:50px; color:grey;")
                            else
                                span(class="fas fa-globe", style="font-size:50px;")
                    h3(class="profile-username text-center")=website_name
                    p(class="text-muted text-center")=website_category
                        |  | #{website_type}
                    ul(class="list-group list-group-unbordered mb-3")
                        li(class="list-group-item")
                            b Home Url
                            a(class="float-right")=website_url
                        li(class="list-group-item")
                            b FQDN
                            a(class="float-right")=fqdn
                        li(class="list-group-item")
                            b Country
                            a(class="float-right")=country
                        li(class="list-group-item")
                            b Country Code
                            a(class="float-right")=country_code
                        li(class="list-group-item")
                            b Language
                            a(class="float-right")=website_language
                        li(class="list-group-item")
                            b Website Status
                            a(class="float-right")=status
            .card
                .card-body.box-profile
                    h3(class="profile-username text-center") History
                    strong
                        i.fas.fa-user
                        |  Created By
                    p.text-muted=created_by
                    hr
                    strong 
                        i.fas.fa-calendar
                        |  Date Created
                    p.text-muted(title=moment(date_created).add(8, 'hours').format('LLLL'))=moment(date_created).add(8, 'hours').fromNow()
                    hr
                    strong
                        i.fas.fa-user
                        |  Updated By
                    p.text-muted=updated_by
                    hr
                    strong 
                        i.fas.fa-calendar
                        |  Date Updated
                    p.text-muted(title=moment(date_updated).add(8, 'hours').format('LLLL'))=moment(date_updated).add(8, 'hours').fromNow()
        
        .col-sm-9
            .card
                .card-header.p-2
                    ul.nav.nav-pills
                        li.nav-item
                            a(href="#sections", data-toggle="tab", class="nav-link active") Sections
                        li.nav-item
                            a(href="#filters", data-toggle="tab", class="nav-link") Filters
                        li.nav-item
                            a(href="#scrapers", data-toggle="tab", class="nav-link", aria-expanded="false") Scraper
                        if session.user.acc_type == 'dev'
                            li.nav-item
                                a(href="#others", data-toggle="tab", class="nav-link", aria-expanded="false") Others
                        li.nav-item
                            a(href="#queued_articles", data-toggle="tab", class="nav-link", aria-expanded="false") Queued Articles(0)
                        li.nav-item
                            a(href="#error_articles", data-toggle="tab", class="nav-link", aria-expanded="false") Error Articles(0)
                .card-body
                    .tab-content

                        #sections.active.tab-pane
                            - const sections = main_sections.map(v=>`<li><a href="${v}" class="nav-link" target="_blank">${v}</a>`).join('</li>')
                            ul(style="list-style: square outside none;", id="main_sections") !{sections}
                            button#btnAddSectionsToCrawl.btn.btn-warning Add to crawler
                            
                        #filters.tab-pane
                            if (is_using_selectors || is_using_snippets)
                                p 
                                    strong Section Filters
                                textarea#filter-div.form-control=JSON.stringify(section_filter, null, 4)
                                hr
                                p 
                                    strong Article Filters
                                textarea#filter-div2.form-control=JSON.stringify(article_filter, null, 4)
                                hr
                                .input-group
                                    span.input-group-prepend
                                        span.input-group-text.bg-info
                                            i.fas.fa-globe
                                    input#section_url(type="search", name="section_url", class="form-control", placeholder="Place an section link of "+website_name)
                                    span.input-group-append
                                        select#request_source.form-control(name="request_source")
                                            option(value="request", selected=(request_source === 'request') ? true : false) Request
                                            option(value="cloudscraper", selected=(request_source === 'cloudscraper') ? true : false) Cloud Scrape
                                    span.input-group-append
                                        button.btn.btn-default.bg-info(id="btnBrowseSection")
                                            i.fas.fa-search
                                            |  Browse
                                    if session.user.acc_type == 'dev'
                                        span.input-group-append
                                            button.btn.btn-default.bg-info(id="btnUpdateWebsiteFilters")
                                                i.fas.fa-save
                                                |  Save config
                            else
                                h3.text-muted.text-center Scraper is not configured!
                                    a(class="nav-link", href="/mmi-admin-dashboard/websites/new/"+_id) Configure now?

                        #scrapers.tab-pane
                            if (is_using_selectors || is_using_snippets)
                                p.text-muted
                                    i.fas.fa-question-circle
                                    |  The configuration of this website scraper is using the
                                    if is_using_selectors
                                        strong  Selectors
                                    else
                                        strong  Snippet

                                if is_using_selectors
                                    textarea#scraper-div.form-control=JSON.stringify(selectors, null, 4)
                                else
                                    textarea#scraper-div.form-control=code_snippet
                                hr
                                .input-group
                                    span.input-group-prepend
                                        span.input-group-text.bg-info
                                            i.fas.fa-globe
                                    input#article_url(type="search", name="article_url", class="form-control", placeholder="Place an article link of "+website_name)
                                    span.input-group-append
                                        select#request_source2.form-control(name="request_source2")
                                            option(value="request", selected=(request_source === 'request') ? true : false) Request
                                            option(value="cloudscraper", selected=(request_source === 'cloudscraper') ? true : false) Cloud Scraper
                                    span.input-group-append
                                        button.btn.btn-default.bg-info(id="btnBrowseArticle")
                                            i.fas.fa-search
                                            |  Browse
                                    if session.user.acc_type == 'dev'
                                        span.input-group-append
                                            button.btn.btn-default.bg-info(id="btnUpdateWebsiteScrapers")
                                                i.fas.fa-save
                                                |  Save config
                            else
                                h3.text-muted.text-center Scraper is not configured!
                                    a(class="nav-link", href="/mmi-admin-dashboard/websites/new/"+_id) Configure now?
                        
                        if session.user.acc_type == 'dev'
                            #others.tab-pane
                                form#form-config-others
                                    p.text-muted
                                        i.fas.fa-question-circle
                                        |  These are some of the options used in scraping.
                                        //- button#btnEnableEdit.btn.btn-tool(type="button")
                                        //-     i.fas.fa-edit
                                    .custom-control.custom-switch
                                        input#btnEnableEdit(type="checkbox", name="btnEnableEdit", class="custom-control-input")
                                        label(for="btnEnableEdit", class="custom-control-label") Toggle to modify the options
                                    ul(class="list-group list-group-unbordered mb-3")
                                        li(class="list-group-item")
                                            b Status
                                            a(class="float-right hide-display-content")=status
                                            .no-display-content.custom-control.custom-radio.col-sm-1.float-right(style="display:none")
                                                input#expired(type="radio", name="status", class="custom-control-input", value="EXPIRED", checked=(status === 'EXPIRED') ? true : false)
                                                label(for='expired', class="custom-control-label") EXPIRED
                                            .no-display-content.custom-control.custom-radio.col-sm-1.float-right(style="display:none")
                                                input#inactive(type="radio", name="status", class="custom-control-input", value="INACTIVE", checked=(status === 'INACTIVE') ? true : false)
                                                label(for='inactive', class="custom-control-label") INACTIVE
                                            .no-display-content.custom-control.custom-radio.col-sm-1.float-right(style="display:none")
                                                input#active(type="radio", name="status", class="custom-control-input", value="ACTIVE", checked=(status === 'ACTIVE') ? true : false )
                                                label(for='active', class="custom-control-label") ACTIVE
                                            
                                        li(class="list-group-item")
                                            b Includes Search Params
                                            a(class="float-right hide-display-content")=needs_search_params
                                            .no-display-content.custom-control.custom-switch.float-right(style="display:none")
                                                input#needs_search_params(type="checkbox", name="needs_search_params", class="custom-control-input", checked=(needs_search_params) ? true  : false)
                                                label(for="needs_search_params", class="custom-control-label") NO | YES
                                        li(class="list-group-item")
                                            b Starts with https
                                            a(class="float-right hide-display-content")=needs_https
                                            .no-display-content.custom-control.custom-switch.float-right(style="display:none")
                                                input#needs_https(type="checkbox", name="needs_https", class="custom-control-input", checked=(needs_https) ? true  : false)
                                                label(for="needs_https", class="custom-control-label") NO | YES
                                        li(class="list-group-item")
                                            b Ends with slash
                                            a(class="float-right hide-display-content")=needs_endslash
                                            .no-display-content.custom-control.custom-switch.float-right(style="display:none")
                                                input#needs_endslash(type="checkbox", name="needs_endslash", class="custom-control-input", checked=(needs_endslash) ? true  : false)
                                                label(for="needs_endslash", class="custom-control-label") NO | YES
                                        li(class="list-group-item")
                                            b Programming Language
                                            a(class="float-right hide-display-content")=programming_language || 'None'
                                            input#programming_language.form-control.float-right.no-display-content(type="text", name="programming_language", value=programming_language, style="display:none")
                                        li(class="list-group-item")
                                            b Dynamic website
                                            a(class="float-right hide-display-content")=is_dynamic_website
                                            .no-display-content.custom-control.custom-switch.float-right(style="display:none")
                                                input#is_dynamic_website(type="checkbox", name="is_dynamic_website", class="custom-control-input", checked=(is_dynamic_website) ? true  : false)
                                                label(for="is_dynamic_website", class="custom-control-label") NO | YES
                                        li(class="list-group-item")
                                            b Request Source
                                            a(class="float-right hide-display-content")=request_source
                                            .no-display-content.custom-control.custom-radio.col-sm-1.float-right(style="display:none")
                                                input#request(type="radio", name="request_source", class="custom-control-input", value="request", checked=(request_source === 'request') ? true : false)
                                                label(for='request', class="custom-control-label") Request
                                            .no-display-content.custom-control.custom-radio.col-sm-1.float-right(style="display:none")
                                                input#cloudscraper(type="radio", name="request_source", class="custom-control-input", value="cloudscraper", checked=(request_source === 'cloudscraper') ? true : false)
                                                label(for='cloudscraper', class="custom-control-label") Cloudscraper
                                        li(class="list-group-item")
                                            b Is using selectors
                                            a(class="float-right hide-display-content")=is_using_selectors
                                            .no-display-content.custom-control.custom-switch.float-right(style="display:none")
                                                input#is_using_selectors(type="checkbox", name="is_using_selectors", class="custom-control-input", checked=(is_using_selectors) ? true  : false)
                                                label(for="is_using_selectors", class="custom-control-label") NO | YES
                                        li(class="list-group-item")
                                            b Is using snippet
                                            a(class="float-right hide-display-content")=is_using_snippets
                                            .no-display-content.custom-control.custom-switch.float-right(style="display:none")
                                                input#is_using_snippets(type="checkbox", name="is_using_snippets", class="custom-control-input", checked=(is_using_snippets) ? true  : false)
                                                label(for="is_using_snippets", class="custom-control-label") NO | YES
                                button#updateOthersConfig.btn.btn-warning.no-display-content(style="display:none", type="button") Save Changes
                        #queued_articles.tab-pane
                            h3 Queued here
                        #error_articles.tab-pane
                            h3 Error here
                
                .overlay(style="display:none;")
                    i(class="fas fa-2x fa-sync-alt fa-spin")
            .card#result-card                             

block js
    script.
        const userData = JSON.parse('!{JSON.stringify(session)}')
        const user = userData.user.acc_first_name+' '+userData.user.acc_last_name
        const id = `#{_id}`
        const website_url = `#{website_url}`
        const needs_search_params = `#{needs_search_params}`
        const needs_https = `#{needs_https}`
        const needs_endslash = `#{needs_endslash}`
        const is_using_selectors = JSON.parse(`#{is_using_selectors}`)
        const is_using_snippets = JSON.parse(`#{is_using_snippets}`)
        const selectors_from_db = `!{JSON.stringify(selectors)}`
        const code_snippet_from_db = `#{code_snippet}`
        const alexa = JSON.parse(`!{JSON.stringify(alexa_rankings)}`)
        const global_rank = alexa.global
        const local_rank = alexa.local
        const website_cost = JSON.parse(`!{website_cost}`)
        const sections = JSON.parse(`!{JSON.stringify(main_sections)}`)
    script(src="/admin-lte-3/javascripts/ace/src-noconflict/ace.js")
    script(src="/admin-lte-3/javascripts/moment.min.js")
    script(src="/admin-lte-3/javascripts/website/view.js")
